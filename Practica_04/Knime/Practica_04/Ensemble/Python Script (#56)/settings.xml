<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="sourceCode" type="xstring" value="import numpy as np%%00010import pandas as pd%%00010import math%%00010%%00010def euclidean_distance(x, y):%%00010    return np.sqrt(np.sum(np.square(x - y)))%%00010%%00010%%00010def manhattan_distance(x, y):%%00010    return np.sum(np.abs(x - y))%%00010%%00010%%00010# Calculate distance in kilometers between two coordinates.%%00010def get_distance_between_points(x, y):%%00010    lat1, lon1 = x%%00010    lat2, lon2 = y%%00010    R = 6371.0 # Radius of the earth in km%%00010    dlat = math.radians(lat2 - lat1)%%00010    dlon = math.radians(lon2 - lon1)%%00010    a = math.sin(dlat / 2) * math.sin(dlat / 2) + math.cos(math.radians(lat1)) \%%00010        * math.cos(math.radians(lat2)) * math.sin(dlon / 2) * math.sin(dlon / 2)%%00010    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))%%00010    d = R * c # Distance in km%%00010    return d%%00010%%00010%%00010pickup_lat = input_table_1[&quot;pickup_latitude&quot;]%%00010pickup_lon = input_table_1[&quot;pickup_longitude&quot;]%%00010pickup = pd.concat([pickup_lat, pickup_lon], axis=1).to_numpy()%%00010%%00010dropoff_lat = input_table_1[&quot;dropoff_latitude&quot;]%%00010dropoff_lon = input_table_1[&quot;dropoff_longitude&quot;]%%00010dropoff = pd.concat([dropoff_lat, dropoff_lon], axis=1).to_numpy()%%00010%%00010eucs, mans, km = [], [], []%%00010for p, d in zip(pickup, dropoff):%%00010    eucs.append(euclidean_distance(p, d))%%00010    mans.append(manhattan_distance(p, d))%%00010    km.append(get_distance_between_points(p, d))%%00010%%00010# Change this to use different distances%%00010distance = km # (km, eucs, mans)%%00010%%00010output_table_1 = pd.DataFrame(%%00010    {%%00010        &quot;distance&quot;: distance,%%00010    },%%00010    index=input_table_1.index,%%00010)%%00010"/>
        <entry key="rowLimit" type="xint" value="1000"/>
        <entry key="convertMissingToPython" type="xboolean" value="false"/>
        <entry key="convertMissingFromPython" type="xboolean" value="false"/>
        <entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
        <entry key="sentinelValue" type="xint" value="0"/>
        <entry key="chunkSize" type="xint" value="500000"/>
        <entry key="pythonVersionOption" type="xstring" value="python3"/>
        <entry key="python2Command" type="xstring" value=""/>
        <entry key="python3Command" type="xstring" value=""/>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="Calculate distances"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="686"/>
        <entry key="y-coordinate" type="xint" value="859"/>
        <entry key="width" type="xint" value="109"/>
        <entry key="height" type="xint" value="15"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="9"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="EXECUTED"/>
    <entry key="factory" type="xstring" value="org.knime.python2.nodes.script2.Python2ScriptNodeFactory2"/>
    <entry key="node-name" type="xstring" value="Python Script"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.5.0.v202111232310"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.5.2.v202203041212"/>
    <config key="factory_settings"/>
    <config key="node_creation_config">
        <config key="Input object (pickled)"/>
        <config key="Input table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output table">
            <config key="port_0">
                <entry key="object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            </config>
        </config>
        <config key="Output image"/>
        <config key="Output object (pickled)"/>
    </config>
    <entry key="name" type="xstring" value="Python Script"/>
    <entry key="hasContent" type="xboolean" value="true"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            <entry key="port_object_summary" type="xstring" value="Rows: 199999, Cols: 1"/>
            <entry key="port_dir_location" type="xstring" value="port_1"/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" value="c507fdd9-a7c5-4112-84f2-a966213d92ac"/>
    </config>
</config>
